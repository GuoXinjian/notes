{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to GXJ's notes \u4f7f\u7528 mkdocs gh-deploy \u53ef\u4ee5\u5c06\u6587\u6863\u90e8\u7f72\u5230 GitHub Pages\u3002","title":"Home"},{"location":"#welcome-to-gxjs-notes","text":"\u4f7f\u7528 mkdocs gh-deploy \u53ef\u4ee5\u5c06\u6587\u6863\u90e8\u7f72\u5230 GitHub Pages\u3002","title":"Welcome to GXJ's notes"},{"location":"BOOK/CodeClean/1/","text":"","title":"1"},{"location":"Go/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","text":"\u5f85\u5b8c\u5584 \u5e26\u53c2\u6570\u8fd0\u884c import ( \"fmt\" \"flag\" ) func main() { var env string flag.StringVar(&env, \"env\", \"dev\", \"-env \u9ed8\u8ba4\u4e3adev\") flag.Parse() fmt.Println(env) }","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"Go/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_1","text":"","title":"\u5f85\u5b8c\u5584"},{"location":"Go/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_2","text":"import ( \"fmt\" \"flag\" ) func main() { var env string flag.StringVar(&env, \"env\", \"dev\", \"-env \u9ed8\u8ba4\u4e3adev\") flag.Parse() fmt.Println(env) }","title":"\u5e26\u53c2\u6570\u8fd0\u884c"},{"location":"Go/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/Gorm/%E4%BD%BF%E7%94%A8%E5%A4%96%E9%94%AE%E5%85%B3%E8%81%94%E5%92%8CPreload%E9%A2%84%E5%8A%A0%E8%BD%BD/","text":"\u4f7f\u7528Preload\u8fdb\u884c\u9884\u52a0\u8f7d database.go package database import ( \"gorm.io/driver/mysql\" \"gorm.io/gorm\" ) var MysqlDB *gorm.DB func MysqlInit() error { var err error MysqlDB, err = gorm.Open(mysql.Open(Host), &gorm.Config{}) if err != nil { panic(err) } return err } user.go package model import ( \"gorm.io/gorm\" ) type Class struct { gorm.Model Name string } type Student struct { gorm.Model Name string Age int ClassID uint Class Class `gorm:\"foreignkey:ClassID\"` } type Parent struct { gorm.Model Name string StudentID uint Student Student `gorm:\"foreignkey:StudentID\"` } controller.go \u4ee5Gin\u4e3a\u4f8b package controller import ( \"app/model\" \"github.com/gin-gonic/gin\" ) func GetList(c *gin.Context) { var parent model.Parent parent.Name = \"parentname\" err := database.MysqlDB.Preload(\"Student\").Preload(\"Student.Class\").Find(&parent).Error if err != nil { c.JSON(500, gin.H{ \"message\": \"get list failed\", }) return } c.JSON(200, gin.H{\"parent\": parent}) \u7ed3\u679c { \"parent\": { \"ID\": 1, \"Name\": \"parentname\", \"Student\": { \"ID\": 1, \"Name\": \"studentname\", \"Age\": 18, \"Class\": { \"ID\": 1, \"Name\": \"classname\" } } } }","title":"\u4f7f\u7528\u5916\u952e\u5173\u8054\u548cPreload\u9884\u52a0\u8f7d"},{"location":"Go/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/Gorm/%E4%BD%BF%E7%94%A8%E5%A4%96%E9%94%AE%E5%85%B3%E8%81%94%E5%92%8CPreload%E9%A2%84%E5%8A%A0%E8%BD%BD/#preload","text":"database.go package database import ( \"gorm.io/driver/mysql\" \"gorm.io/gorm\" ) var MysqlDB *gorm.DB func MysqlInit() error { var err error MysqlDB, err = gorm.Open(mysql.Open(Host), &gorm.Config{}) if err != nil { panic(err) } return err } user.go package model import ( \"gorm.io/gorm\" ) type Class struct { gorm.Model Name string } type Student struct { gorm.Model Name string Age int ClassID uint Class Class `gorm:\"foreignkey:ClassID\"` } type Parent struct { gorm.Model Name string StudentID uint Student Student `gorm:\"foreignkey:StudentID\"` } controller.go \u4ee5Gin\u4e3a\u4f8b package controller import ( \"app/model\" \"github.com/gin-gonic/gin\" ) func GetList(c *gin.Context) { var parent model.Parent parent.Name = \"parentname\" err := database.MysqlDB.Preload(\"Student\").Preload(\"Student.Class\").Find(&parent).Error if err != nil { c.JSON(500, gin.H{ \"message\": \"get list failed\", }) return } c.JSON(200, gin.H{\"parent\": parent}) \u7ed3\u679c { \"parent\": { \"ID\": 1, \"Name\": \"parentname\", \"Student\": { \"ID\": 1, \"Name\": \"studentname\", \"Age\": 18, \"Class\": { \"ID\": 1, \"Name\": \"classname\" } } } }","title":"\u4f7f\u7528Preload\u8fdb\u884c\u9884\u52a0\u8f7d"},{"location":"Go/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/Gorm/%E9%80%9A%E7%94%A8CURD%E6%96%B9%E6%B3%95/","text":"\u901a\u7528CURD\u65b9\u6cd5 database.go package database import ( \"gorm.io/driver/mysql\" \"gorm.io/gorm\" ) var MysqlDB *gorm.DB func MysqlInit() error { var err error MysqlDB, err = gorm.Open(mysql.Open(Host), &gorm.Config{}) if err != nil { panic(err) } return err } basemodel.go package model import ( \"app/database\" ) type TableNameAble interface { TableName() string } func Create(value TableNameAble) error { err := database.MysqlDB.Create(value).Error return err } // \u53ea\u80fd\u901a\u8fc7\u4e3b\u952e\u67e5\u8be2\uff0c\u5982\u9700\u67e5\u8be2\u5176\u4ed6\u5b57\u6bb5\uff0c\u4f7f\u7528GetList func Get(value TableNameAble) error { err := database.MysqlDB.First(value).Error return err } func GetList(value TableNameAble,result interface{}) error { err := database.MysqlDB.Model(value).Find(result,value).Error return err } user.go package model import ( \"gorm.io/gorm\" ) type User struct { gorm.Model Name string Age int } func (User) TableName() string { return \"User\" } controller.go \u4ee5Gin\u4e3a\u4f8b package controller import ( \"app/model\" \"github.com/gin-gonic/gin\" ) func Create(c *gin.Context) { var user model.User user.Name = \"username\" user.Age = age err := model.Create(&user) if err != nil { c.JSON(500, gin.H{ \"message\": \"create failed\", }) return } c.JSON(200, gin.H{ \"message\": \"create success\", }) } func GetList(c *gin.Context) { var users []model.User var user model.User err := model.GetList(user,&users) if err != nil { c.JSON(500, gin.H{ \"message\": \"get list failed\", }) return } c.JSON(200, gin.H{\"users\": users})","title":"\u901a\u7528CURD\u65b9\u6cd5"},{"location":"Go/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/Gorm/%E9%80%9A%E7%94%A8CURD%E6%96%B9%E6%B3%95/#curd","text":"database.go package database import ( \"gorm.io/driver/mysql\" \"gorm.io/gorm\" ) var MysqlDB *gorm.DB func MysqlInit() error { var err error MysqlDB, err = gorm.Open(mysql.Open(Host), &gorm.Config{}) if err != nil { panic(err) } return err } basemodel.go package model import ( \"app/database\" ) type TableNameAble interface { TableName() string } func Create(value TableNameAble) error { err := database.MysqlDB.Create(value).Error return err } // \u53ea\u80fd\u901a\u8fc7\u4e3b\u952e\u67e5\u8be2\uff0c\u5982\u9700\u67e5\u8be2\u5176\u4ed6\u5b57\u6bb5\uff0c\u4f7f\u7528GetList func Get(value TableNameAble) error { err := database.MysqlDB.First(value).Error return err } func GetList(value TableNameAble,result interface{}) error { err := database.MysqlDB.Model(value).Find(result,value).Error return err } user.go package model import ( \"gorm.io/gorm\" ) type User struct { gorm.Model Name string Age int } func (User) TableName() string { return \"User\" } controller.go \u4ee5Gin\u4e3a\u4f8b package controller import ( \"app/model\" \"github.com/gin-gonic/gin\" ) func Create(c *gin.Context) { var user model.User user.Name = \"username\" user.Age = age err := model.Create(&user) if err != nil { c.JSON(500, gin.H{ \"message\": \"create failed\", }) return } c.JSON(200, gin.H{ \"message\": \"create success\", }) } func GetList(c *gin.Context) { var users []model.User var user model.User err := model.GetList(user,&users) if err != nil { c.JSON(500, gin.H{ \"message\": \"get list failed\", }) return } c.JSON(200, gin.H{\"users\": users})","title":"\u901a\u7528CURD\u65b9\u6cd5"},{"location":"MkDocs/","text":"Mkdocs\u7528\u6cd5 \u5b89\u88c5\u53ca\u90e8\u7f72","title":"\u5b89\u88c5\u53ca\u90e8\u7f72"},{"location":"MkDocs/#mkdocs","text":"\u5b89\u88c5\u53ca\u90e8\u7f72","title":"Mkdocs\u7528\u6cd5"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/Games/","text":"Games TO \u827e\u5c14\u767b\u6cd5\u73af \u6218\u795e4 \u5e08\u7236SIFU 2077 \u5927\u591a\u6570 \u5deb\u5e08 \u9b42 P5 \u5730\u5e73\u7ebf2 \u8352\u91ce\u5927\u9556\u5ba2","title":"Games"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/Games/#games","text":"","title":"Games"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/Games/#to","text":"\u827e\u5c14\u767b\u6cd5\u73af \u6218\u795e4 \u5e08\u7236SIFU 2077 \u5927\u591a\u6570 \u5deb\u5e08 \u9b42 P5 \u5730\u5e73\u7ebf2 \u8352\u91ce\u5927\u9556\u5ba2","title":"TO"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/","text":"\u5c0f\u5de5\u5177\u6216\u5f00\u6e90\u5e93 \u684c\u9762\u753b\u56fe gink \u952e\u76d8\u7f16\u8f91\u8f6f\u4ef6 bootmapper \u5404\u76f4\u64ad\u5e73\u53f0\u76f4\u64ad\u94fe\u63a5 real-url windows\u684c\u9762\u7f8e\u5316 rainmeter \u53d8\u538b\u5668/\u7535\u6e90 \u660e\u7eac CI/CD\u5de5\u5177 dagger","title":"\u5c0f\u5de5\u5177\u6216\u5f00\u6e90\u5e93"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/#_1","text":"","title":"\u5c0f\u5de5\u5177\u6216\u5f00\u6e90\u5e93"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/#_2","text":"gink","title":"\u684c\u9762\u753b\u56fe"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/#_3","text":"bootmapper","title":"\u952e\u76d8\u7f16\u8f91\u8f6f\u4ef6"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/#_4","text":"real-url","title":"\u5404\u76f4\u64ad\u5e73\u53f0\u76f4\u64ad\u94fe\u63a5"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/#windows","text":"rainmeter","title":"windows\u684c\u9762\u7f8e\u5316"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/#_5","text":"\u660e\u7eac","title":"\u53d8\u538b\u5668/\u7535\u6e90"},{"location":"%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C/%E5%B0%8F%E5%B7%A5%E5%85%B7%E6%88%96%E5%BC%80%E6%BA%90%E5%BA%93/#cicd","text":"dagger","title":"CI/CD\u5de5\u5177"}]}